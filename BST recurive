Checking if a binary tree is a binary search tree or not:

int isBST(struct node* root){
 static struct node*prev = NULL;
   if(root!=NULL){
      if(!isBST(root->left)){
         return 0;
     }
     if(prev!=NULL && root->data <=prev->data){
          return 0;
       }
      prev = root;
      return isBST(root->right);
  }
  else{
     return 1;
  }

Searching in BST

         50
         /\
        40 60
        /\ /\
      20 45 55 70

Search for eg 55

C code for searching in a BST!

node*Search(node*root, int key)
{
if(root == NULL)
    return NULL;
if(root->data == key)
   return root;
else if(root->data>key)
    return Serch(root->left,key)
else
    return Search(root->right,key)
}

C code for searching in a BST (recursive)

search(p,7)

struct node*search(struct node*root, int key){
if(root==NULL){
   return NULL:
}
if(key == root->data){
   return root;
}
else if(key<root->data){
    return search(root->left,key);
}
else{
    return search(root->right,key);
}
}


