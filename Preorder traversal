Binary Tree- PreOrder Traversal

Root-> Left-> Right

Preorder code:

void preorder(struct node*root){
 if(root!=NULL){
 printf(root->data);
 preorder(root->left);
 preorder(root->right);
}
}

#include<stdio.h>
#include<malloc.h>

struct node{
  int data;
  struct node*left;
  struct node*right;
 };

struct node*createNode(int data){
  struct node*n;
  n = (struct node*)malloc(sizeof(struct node));
  n->data = data;
  n->left = NULL;
  n->right = NULL;
  return n;
}

void preOrder(struct node*root)
{
   if(root!=NULL){
     printf("%d",root->data);
     preOrder(root->left);
     preOrder(root->right);
 }

int main()
{
  struct node*p = createNode(4);
  struct node*p = createNode(1);
  struct node*p = createNode(6);
  struct node*p = createNode(5);
  struct node*p = createNode(2);
  
            4
         /      \
         1       6
         /\
        5  2
   p->left = p1;
   p->right = p2;
   p->left = p3;
   p->right = p4;

 return 0;
}
 
  

